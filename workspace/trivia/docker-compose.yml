version: '3.4'

services:
  frontend:
    build:
      context: ${PWD}/frontend
      dockerfile: Dockerfile
    image: "trivia/frontend"
    # switch to root if global installation is needed:
    user: "root"
    environment:
      - NODE_ENV=production
    volumes:
      - ${PWD}/frontend/public:/home/node/app/public
      - ${PWD}/frontend/src:/home/node/app/src
    ports:
        - "3000:3000"
    command: "npm start"
    depends_on:
      - db
      - adminer
      - backend

  backend:
    build:
      context: ${PWD}/backend
      dockerfile: Dockerfile
    image: "trivia/backend"
    environment:
      - FLASK_APP=app.py
      - FLASK_DEBUG=true
      - FLASK_CONFIG=development
      - DEV_DATABASE_URL=postgresql://udacity:udacity@db:5432/triviaapp
      - STATIC_PATH=/app/application/static
    ports:
      - "60080:80"
    volumes:
      # remove the following for production with Dockerfile ADD
      - ${PWD}/backend/application:/app/application
      - ${PWD}/backend/data:/app/data
      - ${PWD}/backend/migrations:/app/migrations
      - ${PWD}/backend/tests:/app/tests
      - ${PWD}/backend/config.py:/app/config.py
      - ${PWD}/backend/app.py:/app/app.py
      - ${PWD}/backend/requirements.txt:/app/requirements.txt
      - ${PWD}/backend/uwsgi.ini:/app/uwsgi.ini      
    depends_on:
      - db
      - adminer

  db:
    image: "postgres"
    restart: always
    environment:
      - POSTGRES_USER=udacity
      - POSTGRES_PASSWORD=udacity
      - POSTGRES_DB=triviaapp
    volumes:
      - ${PWD}/volume:/var/lib/postgresql/data
      - ${PWD}/backend/data/trivia.psql:/trivia.psql

  adminer:
    image: "adminer"
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db